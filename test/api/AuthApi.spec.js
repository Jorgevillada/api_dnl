/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DnlApi);
  }
}(this, function(expect, DnlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DnlApi.AuthApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AuthApi', function() {
    describe('authAsClientPost', function() {
      it('should call authAsClientPost successfully', function(done) {
        //uncomment below and update the code to test authAsClientPost
        //instance.authAsClientPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authCheckPasswordPost', function() {
      it('should call authCheckPasswordPost successfully', function(done) {
        //uncomment below and update the code to test authCheckPasswordPost
        //instance.authCheckPasswordPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authCheckTokenPost', function() {
      it('should call authCheckTokenPost successfully', function(done) {
        //uncomment below and update the code to test authCheckTokenPost
        //instance.authCheckTokenPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authPost', function() {
      it('should call authPost successfully', function(done) {
        //uncomment below and update the code to test authPost
        //instance.authPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authResetEmailPost', function() {
      it('should call authResetEmailPost successfully', function(done) {
        //uncomment below and update the code to test authResetEmailPost
        //instance.authResetEmailPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authResetPasswordPost', function() {
      it('should call authResetPasswordPost successfully', function(done) {
        //uncomment below and update the code to test authResetPasswordPost
        //instance.authResetPasswordPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registrationCreatePost', function() {
      it('should call registrationCreatePost successfully', function(done) {
        //uncomment below and update the code to test registrationCreatePost
        //instance.registrationCreatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registrationIdApprovePatch', function() {
      it('should call registrationIdApprovePatch successfully', function(done) {
        //uncomment below and update the code to test registrationIdApprovePatch
        //instance.registrationIdApprovePatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registrationIdDelete', function() {
      it('should call registrationIdDelete successfully', function(done) {
        //uncomment below and update the code to test registrationIdDelete
        //instance.registrationIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registrationIdGet', function() {
      it('should call registrationIdGet successfully', function(done) {
        //uncomment below and update the code to test registrationIdGet
        //instance.registrationIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registrationIdPatch', function() {
      it('should call registrationIdPatch successfully', function(done) {
        //uncomment below and update the code to test registrationIdPatch
        //instance.registrationIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registrationListGet', function() {
      it('should call registrationListGet successfully', function(done) {
        //uncomment below and update the code to test registrationListGet
        //instance.registrationListGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userCreatePost', function() {
      it('should call userCreatePost successfully', function(done) {
        //uncomment below and update the code to test userCreatePost
        //instance.userCreatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userGet', function() {
      it('should call userGet successfully', function(done) {
        //uncomment below and update the code to test userGet
        //instance.userGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userListGet', function() {
      it('should call userListGet successfully', function(done) {
        //uncomment below and update the code to test userListGet
        //instance.userListGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userUserIdDelete', function() {
      it('should call userUserIdDelete successfully', function(done) {
        //uncomment below and update the code to test userUserIdDelete
        //instance.userUserIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userUserIdGet', function() {
      it('should call userUserIdGet successfully', function(done) {
        //uncomment below and update the code to test userUserIdGet
        //instance.userUserIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userUserIdPatch', function() {
      it('should call userUserIdPatch successfully', function(done) {
        //uncomment below and update the code to test userUserIdPatch
        //instance.userUserIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
