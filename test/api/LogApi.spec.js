/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DnlApi);
  }
}(this, function(expect, DnlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DnlApi.LogApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LogApi', function() {
    describe('logAlertRuleGet', function() {
      it('should call logAlertRuleGet successfully', function(done) {
        //uncomment below and update the code to test logAlertRuleGet
        //instance.logAlertRuleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logAuthGet', function() {
      it('should call logAuthGet successfully', function(done) {
        //uncomment below and update the code to test logAuthGet
        //instance.logAuthGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logBalanceGet', function() {
      it('should call logBalanceGet successfully', function(done) {
        //uncomment below and update the code to test logBalanceGet
        //instance.logBalanceGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logCreditGet', function() {
      it('should call logCreditGet successfully', function(done) {
        //uncomment below and update the code to test logCreditGet
        //instance.logCreditGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logEmailGet', function() {
      it('should call logEmailGet successfully', function(done) {
        //uncomment below and update the code to test logEmailGet
        //instance.logEmailGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logExportGet', function() {
      it('should call logExportGet successfully', function(done) {
        //uncomment below and update the code to test logExportGet
        //instance.logExportGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logFraudDetectionGet', function() {
      it('should call logFraudDetectionGet successfully', function(done) {
        //uncomment below and update the code to test logFraudDetectionGet
        //instance.logFraudDetectionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logFtpGet', function() {
      it('should call logFtpGet successfully', function(done) {
        //uncomment below and update the code to test logFtpGet
        //instance.logFtpGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logFtpServerGet', function() {
      it('should call logFtpServerGet successfully', function(done) {
        //uncomment below and update the code to test logFtpServerGet
        //instance.logFtpServerGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logImportGet', function() {
      it('should call logImportGet successfully', function(done) {
        //uncomment below and update the code to test logImportGet
        //instance.logImportGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logInvoiceCdrGet', function() {
      it('should call logInvoiceCdrGet successfully', function(done) {
        //uncomment below and update the code to test logInvoiceCdrGet
        //instance.logInvoiceCdrGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logInvoiceGet', function() {
      it('should call logInvoiceGet successfully', function(done) {
        //uncomment below and update the code to test logInvoiceGet
        //instance.logInvoiceGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logIpModifyGet', function() {
      it('should call logIpModifyGet successfully', function(done) {
        //uncomment below and update the code to test logIpModifyGet
        //instance.logIpModifyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logLicenseModifyGet', function() {
      it('should call logLicenseModifyGet successfully', function(done) {
        //uncomment below and update the code to test logLicenseModifyGet
        //instance.logLicenseModifyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logModifyGet', function() {
      it('should call logModifyGet successfully', function(done) {
        //uncomment below and update the code to test logModifyGet
        //instance.logModifyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logOrigGet', function() {
      it('should call logOrigGet successfully', function(done) {
        //uncomment below and update the code to test logOrigGet
        //instance.logOrigGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logRateDownloadGet', function() {
      it('should call logRateDownloadGet successfully', function(done) {
        //uncomment below and update the code to test logRateDownloadGet
        //instance.logRateDownloadGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logRateGenerationGet', function() {
      it('should call logRateGenerationGet successfully', function(done) {
        //uncomment below and update the code to test logRateGenerationGet
        //instance.logRateGenerationGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logRateMassEditGet', function() {
      it('should call logRateMassEditGet successfully', function(done) {
        //uncomment below and update the code to test logRateMassEditGet
        //instance.logRateMassEditGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logRateUploadGet', function() {
      it('should call logRateUploadGet successfully', function(done) {
        //uncomment below and update the code to test logRateUploadGet
        //instance.logRateUploadGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logRegenerateBalanceGet', function() {
      it('should call logRegenerateBalanceGet successfully', function(done) {
        //uncomment below and update the code to test logRegenerateBalanceGet
        //instance.logRegenerateBalanceGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logRerateCdrDownloadGet', function() {
      it('should call logRerateCdrDownloadGet successfully', function(done) {
        //uncomment below and update the code to test logRerateCdrDownloadGet
        //instance.logRerateCdrDownloadGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logRerateExecGet', function() {
      it('should call logRerateExecGet successfully', function(done) {
        //uncomment below and update the code to test logRerateExecGet
        //instance.logRerateExecGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logRetrievePasswordGet', function() {
      it('should call logRetrievePasswordGet successfully', function(done) {
        //uncomment below and update the code to test logRetrievePasswordGet
        //instance.logRetrievePasswordGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logRevisionsGet', function() {
      it('should call logRevisionsGet successfully', function(done) {
        //uncomment below and update the code to test logRevisionsGet
        //instance.logRevisionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logRevisionsIdRestorePost', function() {
      it('should call logRevisionsIdRestorePost successfully', function(done) {
        //uncomment below and update the code to test logRevisionsIdRestorePost
        //instance.logRevisionsIdRestorePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logScheduledReportGet', function() {
      it('should call logScheduledReportGet successfully', function(done) {
        //uncomment below and update the code to test logScheduledReportGet
        //instance.logScheduledReportGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logSchedulerGet', function() {
      it('should call logSchedulerGet successfully', function(done) {
        //uncomment below and update the code to test logSchedulerGet
        //instance.logSchedulerGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logSipRegisterGet', function() {
      it('should call logSipRegisterGet successfully', function(done) {
        //uncomment below and update the code to test logSipRegisterGet
        //instance.logSipRegisterGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logSqlGet', function() {
      it('should call logSqlGet successfully', function(done) {
        //uncomment below and update the code to test logSqlGet
        //instance.logSqlGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logUserSignonGet', function() {
      it('should call logUserSignonGet successfully', function(done) {
        //uncomment below and update the code to test logUserSignonGet
        //instance.logUserSignonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logVersionsGet', function() {
      it('should call logVersionsGet successfully', function(done) {
        //uncomment below and update the code to test logVersionsGet
        //instance.logVersionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
