/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DnlApi);
  }
}(this, function(expect, DnlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DnlApi.MonitoringApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MonitoringApi', function() {
    describe('monitoringFraudDetectionIdDelete', function() {
      it('should call monitoringFraudDetectionIdDelete successfully', function(done) {
        //uncomment below and update the code to test monitoringFraudDetectionIdDelete
        //instance.monitoringFraudDetectionIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringFraudDetectionIdGet', function() {
      it('should call monitoringFraudDetectionIdGet successfully', function(done) {
        //uncomment below and update the code to test monitoringFraudDetectionIdGet
        //instance.monitoringFraudDetectionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringFraudDetectionIdPatch', function() {
      it('should call monitoringFraudDetectionIdPatch successfully', function(done) {
        //uncomment below and update the code to test monitoringFraudDetectionIdPatch
        //instance.monitoringFraudDetectionIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringFraudDetectionListGet', function() {
      it('should call monitoringFraudDetectionListGet successfully', function(done) {
        //uncomment below and update the code to test monitoringFraudDetectionListGet
        //instance.monitoringFraudDetectionListGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringFraudDetectionPost', function() {
      it('should call monitoringFraudDetectionPost successfully', function(done) {
        //uncomment below and update the code to test monitoringFraudDetectionPost
        //instance.monitoringFraudDetectionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringLoopDetectionIdDelete', function() {
      it('should call monitoringLoopDetectionIdDelete successfully', function(done) {
        //uncomment below and update the code to test monitoringLoopDetectionIdDelete
        //instance.monitoringLoopDetectionIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringLoopDetectionIdGet', function() {
      it('should call monitoringLoopDetectionIdGet successfully', function(done) {
        //uncomment below and update the code to test monitoringLoopDetectionIdGet
        //instance.monitoringLoopDetectionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringLoopDetectionIdPatch', function() {
      it('should call monitoringLoopDetectionIdPatch successfully', function(done) {
        //uncomment below and update the code to test monitoringLoopDetectionIdPatch
        //instance.monitoringLoopDetectionIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringLoopDetectionListGet', function() {
      it('should call monitoringLoopDetectionListGet successfully', function(done) {
        //uncomment below and update the code to test monitoringLoopDetectionListGet
        //instance.monitoringLoopDetectionListGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringLoopDetectionPost', function() {
      it('should call monitoringLoopDetectionPost successfully', function(done) {
        //uncomment below and update the code to test monitoringLoopDetectionPost
        //instance.monitoringLoopDetectionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringRuleIdDelete', function() {
      it('should call monitoringRuleIdDelete successfully', function(done) {
        //uncomment below and update the code to test monitoringRuleIdDelete
        //instance.monitoringRuleIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringRuleIdGet', function() {
      it('should call monitoringRuleIdGet successfully', function(done) {
        //uncomment below and update the code to test monitoringRuleIdGet
        //instance.monitoringRuleIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringRuleIdPatch', function() {
      it('should call monitoringRuleIdPatch successfully', function(done) {
        //uncomment below and update the code to test monitoringRuleIdPatch
        //instance.monitoringRuleIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringRuleListGet', function() {
      it('should call monitoringRuleListGet successfully', function(done) {
        //uncomment below and update the code to test monitoringRuleListGet
        //instance.monitoringRuleListGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('monitoringRulePost', function() {
      it('should call monitoringRulePost successfully', function(done) {
        //uncomment below and update the code to test monitoringRulePost
        //instance.monitoringRulePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
