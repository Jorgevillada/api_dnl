/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DnlApi);
  }
}(this, function(expect, DnlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DnlApi.ClientCdrGet();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClientCdrGet', function() {
    it('should create an instance of ClientCdrGet', function() {
      // uncomment below and update the code to test ClientCdrGet
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be.a(DnlApi.ClientCdrGet);
    });

    it('should have the property ingressBillMinutes (base name: "ingress_bill_minutes")', function() {
      // uncomment below and update the code to test the property ingressBillMinutes
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressRateTableId (base name: "egress_rate_table_id")', function() {
      // uncomment below and update the code to test the property egressRateTableId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationIngressPackets (base name: "origination_ingress_packets")', function() {
      // uncomment below and update the code to test the property originationIngressPackets
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationLocalPayloadIpAddress (base name: "origination_local_payload_ip_address")', function() {
      // uncomment below and update the code to test the property originationLocalPayloadIpAddress
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property releaseCauseFromProtocolStack (base name: "release_cause_from_protocol_stack")', function() {
      // uncomment below and update the code to test the property releaseCauseFromProtocolStack
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property lrnNumberVendor (base name: "lrn_number_vendor")', function() {
      // uncomment below and update the code to test the property lrnNumberVendor
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationLocalPayloadUdpAddress (base name: "origination_local_payload_udp_address")', function() {
      // uncomment below and update the code to test the property originationLocalPayloadUdpAddress
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property agentCost (base name: "agent_cost")', function() {
      // uncomment below and update the code to test the property agentCost
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationEgressOctets (base name: "termination_egress_octets")', function() {
      // uncomment below and update the code to test the property terminationEgressOctets
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationSourceHostName (base name: "origination_source_host_name")', function() {
      // uncomment below and update the code to test the property originationSourceHostName
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property termCodeName (base name: "term_code_name")', function() {
      // uncomment below and update the code to test the property termCodeName
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property aniCodeId (base name: "ani_code_id")', function() {
      // uncomment below and update the code to test the property aniCodeId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property startTimeOfDate (base name: "start_time_of_date")', function() {
      // uncomment below and update the code to test the property startTimeOfDate
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property timeoutType (base name: "timeout_type")', function() {
      // uncomment below and update the code to test the property timeoutType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property rpidUser (base name: "rpid_user")', function() {
      // uncomment below and update the code to test the property rpidUser
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationLocalPayloadUdpAddress (base name: "termination_local_payload_udp_address")', function() {
      // uncomment below and update the code to test the property terminationLocalPayloadUdpAddress
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property releaseTod (base name: "release_tod")', function() {
      // uncomment below and update the code to test the property releaseTod
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationDestinationNumber (base name: "termination_destination_number")', function() {
      // uncomment below and update the code to test the property terminationDestinationNumber
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationIngressOctets (base name: "origination_ingress_octets")', function() {
      // uncomment below and update the code to test the property originationIngressOctets
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property connectionType (base name: "connection_type")', function() {
      // uncomment below and update the code to test the property connectionType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property dnisCodeId (base name: "dnis_code_id")', function() {
      // uncomment below and update the code to test the property dnisCodeId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property itemId (base name: "item_id")', function() {
      // uncomment below and update the code to test the property itemId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property routingDigits (base name: "routing_digits")', function() {
      // uncomment below and update the code to test the property routingDigits
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressClientId (base name: "egress_client_id")', function() {
      // uncomment below and update the code to test the property egressClientId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property calldurationInMs (base name: "callduration_in_ms")', function() {
      // uncomment below and update the code to test the property calldurationInMs
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property tax (base name: "tax")', function() {
      // uncomment below and update the code to test the property tax
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationIngressPacketJitter (base name: "origination_ingress_packet_jitter")', function() {
      // uncomment below and update the code to test the property originationIngressPacketJitter
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationCodecList (base name: "origination_codec_list")', function() {
      // uncomment below and update the code to test the property originationCodecList
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressRateId (base name: "egress_rate_id")', function() {
      // uncomment below and update the code to test the property egressRateId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property staticRoute (base name: "static_route")', function() {
      // uncomment below and update the code to test the property staticRoute
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationEgressPackets (base name: "termination_egress_packets")', function() {
      // uncomment below and update the code to test the property terminationEgressPackets
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressBillResult (base name: "egress_bill_result")', function() {
      // uncomment below and update the code to test the property egressBillResult
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationRemotePayloadIpAddress (base name: "origination_remote_payload_ip_address")', function() {
      // uncomment below and update the code to test the property originationRemotePayloadIpAddress
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property isFinalCall (base name: "is_final_call")', function() {
      // uncomment below and update the code to test the property isFinalCall
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressClientCost (base name: "ingress_client_cost")', function() {
      // uncomment below and update the code to test the property ingressClientCost
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property q850Cause (base name: "q850_cause")', function() {
      // uncomment below and update the code to test the property q850Cause
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationCallId (base name: "termination_call_id")', function() {
      // uncomment below and update the code to test the property terminationCallId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationIngressPacketLoss (base name: "origination_ingress_packet_loss")', function() {
      // uncomment below and update the code to test the property originationIngressPacketLoss
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressClientBillTime (base name: "ingress_client_bill_time")', function() {
      // uncomment below and update the code to test the property ingressClientBillTime
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationRemotePayloadUdpAddress (base name: "termination_remote_payload_udp_address")', function() {
      // uncomment below and update the code to test the property terminationRemotePayloadUdpAddress
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "order_id")', function() {
      // uncomment below and update the code to test the property orderId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property trunkIdOrigination (base name: "trunk_id_origination")', function() {
      // uncomment below and update the code to test the property trunkIdOrigination
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationRemotePayloadIpAddress (base name: "termination_remote_payload_ip_address")', function() {
      // uncomment below and update the code to test the property terminationRemotePayloadIpAddress
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property recordType (base name: "record_type")', function() {
      // uncomment below and update the code to test the property recordType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressClientRateTableId (base name: "ingress_client_rate_table_id")', function() {
      // uncomment below and update the code to test the property ingressClientRateTableId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressDnisType (base name: "egress_dnis_type")', function() {
      // uncomment below and update the code to test the property egressDnisType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property time (base name: "time")', function() {
      // uncomment below and update the code to test the property time
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property translationAni (base name: "translation_ani")', function() {
      // uncomment below and update the code to test the property translationAni
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property origJurType (base name: "orig_jur_type")', function() {
      // uncomment below and update the code to test the property origJurType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationRemotePayloadUdpAddress (base name: "origination_remote_payload_udp_address")', function() {
      // uncomment below and update the code to test the property originationRemotePayloadUdpAddress
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationDestinationNumber (base name: "origination_destination_number")', function() {
      // uncomment below and update the code to test the property originationDestinationNumber
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property termDelaySecond (base name: "term_delay_second")', function() {
      // uncomment below and update the code to test the property termDelaySecond
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property callType (base name: "call_type")', function() {
      // uncomment below and update the code to test the property callType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationIngressPackets (base name: "termination_ingress_packets")', function() {
      // uncomment below and update the code to test the property terminationIngressPackets
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property termCode (base name: "term_code")', function() {
      // uncomment below and update the code to test the property termCode
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property orderType (base name: "order_type")', function() {
      // uncomment below and update the code to test the property orderType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationCallId (base name: "origination_call_id")', function() {
      // uncomment below and update the code to test the property originationCallId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property rerateTime (base name: "rerate_time")', function() {
      // uncomment below and update the code to test the property rerateTime
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property voipProtocolTermination (base name: "voip_protocol_termination")', function() {
      // uncomment below and update the code to test the property voipProtocolTermination
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressCodeAsr (base name: "egress_code_asr")', function() {
      // uncomment below and update the code to test the property egressCodeAsr
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property endEpoch (base name: "end_epoch")', function() {
      // uncomment below and update the code to test the property endEpoch
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationIngressDelay (base name: "origination_ingress_delay")', function() {
      // uncomment below and update the code to test the property originationIngressDelay
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property dynamicRoute (base name: "dynamic_route")', function() {
      // uncomment below and update the code to test the property dynamicRoute
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property origCallDuration (base name: "orig_call_duration")', function() {
      // uncomment below and update the code to test the property origCallDuration
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property sessionId (base name: "session_id")', function() {
      // uncomment below and update the code to test the property sessionId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressId (base name: "egress_id")', function() {
      // uncomment below and update the code to test the property egressId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property routePrefix (base name: "route_prefix")', function() {
      // uncomment below and update the code to test the property routePrefix
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property campaignId (base name: "campaign_id")', function() {
      // uncomment below and update the code to test the property campaignId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationIngressOctets (base name: "termination_ingress_octets")', function() {
      // uncomment below and update the code to test the property terminationIngressOctets
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressRate (base name: "egress_rate")', function() {
      // uncomment below and update the code to test the property egressRate
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property recordSequenceNumber (base name: "record_sequence_number")', function() {
      // uncomment below and update the code to test the property recordSequenceNumber
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property contractId (base name: "contract_id")', function() {
      // uncomment below and update the code to test the property contractId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property binaryValueOfReleaseCauseFromProtocolStack (base name: "binary_value_of_release_cause_from_protocol_stack")', function() {
      // uncomment below and update the code to test the property binaryValueOfReleaseCauseFromProtocolStack
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressCodeAcd (base name: "egress_code_acd")', function() {
      // uncomment below and update the code to test the property egressCodeAcd
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property oBillingMethod (base name: "o_billing_method")', function() {
      // uncomment below and update the code to test the property oBillingMethod
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationEgressPackets (base name: "origination_egress_packets")', function() {
      // uncomment below and update the code to test the property originationEgressPackets
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressClientCurrencyId (base name: "ingress_client_currency_id")', function() {
      // uncomment below and update the code to test the property ingressClientCurrencyId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property q850CauseString (base name: "q850_cause_string")', function() {
      // uncomment below and update the code to test the property q850CauseString
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property paidUser (base name: "paid_user")', function() {
      // uncomment below and update the code to test the property paidUser
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationProfilePort (base name: "termination_profile_port")', function() {
      // uncomment below and update the code to test the property terminationProfilePort
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ringEpoch (base name: "ring_epoch")', function() {
      // uncomment below and update the code to test the property ringEpoch
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property lnpDippingCost (base name: "lnp_dipping_cost")', function() {
      // uncomment below and update the code to test the property lnpDippingCost
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property isManualKill (base name: "is_manual_kill")', function() {
      // uncomment below and update the code to test the property isManualKill
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property trunkType (base name: "trunk_type")', function() {
      // uncomment below and update the code to test the property trunkType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property confId (base name: "conf_id")', function() {
      // uncomment below and update the code to test the property confId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationDestinationHostName (base name: "termination_destination_host_name")', function() {
      // uncomment below and update the code to test the property terminationDestinationHostName
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property answerTimeOfDate (base name: "answer_time_of_date")', function() {
      // uncomment below and update the code to test the property answerTimeOfDate
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressErroString (base name: "egress_erro_string")', function() {
      // uncomment below and update the code to test the property egressErroString
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressClientCurrencyId (base name: "egress_client_currency_id")', function() {
      // uncomment below and update the code to test the property egressClientCurrencyId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressClientId (base name: "ingress_client_id")', function() {
      // uncomment below and update the code to test the property ingressClientId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property releaseCause (base name: "release_cause")', function() {
      // uncomment below and update the code to test the property releaseCause
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationLocalPayloadIpAddress (base name: "termination_local_payload_ip_address")', function() {
      // uncomment below and update the code to test the property terminationLocalPayloadIpAddress
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property tTrunkType2 (base name: "t_trunk_type2")', function() {
      // uncomment below and update the code to test the property tTrunkType2
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property oTrunkType2 (base name: "o_trunk_type2")', function() {
      // uncomment below and update the code to test the property oTrunkType2
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property termCountry (base name: "term_country")', function() {
      // uncomment below and update the code to test the property termCountry
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressClientRate (base name: "ingress_client_rate")', function() {
      // uncomment below and update the code to test the property ingressClientRate
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationSourceNumber (base name: "origination_source_number")', function() {
      // uncomment below and update the code to test the property originationSourceNumber
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property minutesWestOfGreenwichMeanTime (base name: "minutes_west_of_greenwich_mean_time")', function() {
      // uncomment below and update the code to test the property minutesWestOfGreenwichMeanTime
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressBillMinutes (base name: "egress_bill_minutes")', function() {
      // uncomment below and update the code to test the property egressBillMinutes
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationSourceNumber (base name: "termination_source_number")', function() {
      // uncomment below and update the code to test the property terminationSourceNumber
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationDestinationHostName (base name: "origination_destination_host_name")', function() {
      // uncomment below and update the code to test the property originationDestinationHostName
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ringTime (base name: "ring_time")', function() {
      // uncomment below and update the code to test the property ringTime
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressSixSeconds (base name: "egress_six_seconds")', function() {
      // uncomment below and update the code to test the property egressSixSeconds
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property termJurType (base name: "term_jur_type")', function() {
      // uncomment below and update the code to test the property termJurType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property tBillingMethod (base name: "t_billing_method")', function() {
      // uncomment below and update the code to test the property tBillingMethod
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property callDuration (base name: "call_duration")', function() {
      // uncomment below and update the code to test the property callDuration
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressRateEffectiveDate (base name: "ingress_rate_effective_date")', function() {
      // uncomment below and update the code to test the property ingressRateEffectiveDate
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressClientBillResult (base name: "ingress_client_bill_result")', function() {
      // uncomment below and update the code to test the property ingressClientBillResult
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressId (base name: "ingress_id")', function() {
      // uncomment below and update the code to test the property ingressId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationProfilePort (base name: "origination_profile_port")', function() {
      // uncomment below and update the code to test the property originationProfilePort
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressBillTime (base name: "egress_bill_time")', function() {
      // uncomment below and update the code to test the property egressBillTime
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property trunkIdTermination (base name: "trunk_id_termination")', function() {
      // uncomment below and update the code to test the property trunkIdTermination
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressCost (base name: "egress_cost")', function() {
      // uncomment below and update the code to test the property egressCost
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationCodecList (base name: "termination_codec_list")', function() {
      // uncomment below and update the code to test the property terminationCodecList
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressDnisType (base name: "ingress_dnis_type")', function() {
      // uncomment below and update the code to test the property ingressDnisType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property voipProtocolOrigination (base name: "voip_protocol_origination")', function() {
      // uncomment below and update the code to test the property voipProtocolOrigination
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressClientCurrency (base name: "ingress_client_currency")', function() {
      // uncomment below and update the code to test the property ingressClientCurrency
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressRateType (base name: "ingress_rate_type")', function() {
      // uncomment below and update the code to test the property ingressRateType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationIngressPacketLoss (base name: "termination_ingress_packet_loss")', function() {
      // uncomment below and update the code to test the property terminationIngressPacketLoss
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property origCode (base name: "orig_code")', function() {
      // uncomment below and update the code to test the property origCode
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property pdd (base name: "pdd")', function() {
      // uncomment below and update the code to test the property pdd
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressClientCurrency (base name: "egress_client_currency")', function() {
      // uncomment below and update the code to test the property egressClientCurrency
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationIngressDelay (base name: "termination_ingress_delay")', function() {
      // uncomment below and update the code to test the property terminationIngressDelay
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property versionNumber (base name: "version_number")', function() {
      // uncomment below and update the code to test the property versionNumber
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property origDelaySecond (base name: "orig_delay_second")', function() {
      // uncomment below and update the code to test the property origDelaySecond
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property routePlan (base name: "route_plan")', function() {
      // uncomment below and update the code to test the property routePlan
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationSourceHostName (base name: "termination_source_host_name")', function() {
      // uncomment below and update the code to test the property terminationSourceHostName
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property agentId (base name: "agent_id")', function() {
      // uncomment below and update the code to test the property agentId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property agentRate (base name: "agent_rate")', function() {
      // uncomment below and update the code to test the property agentRate
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property firstReleaseDialogue (base name: "first_release_dialogue")', function() {
      // uncomment below and update the code to test the property firstReleaseDialogue
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressRateType (base name: "egress_rate_type")', function() {
      // uncomment below and update the code to test the property egressRateType
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property originationEgressOctets (base name: "origination_egress_octets")', function() {
      // uncomment below and update the code to test the property originationEgressOctets
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property finalRouteIndication (base name: "final_route_indication")', function() {
      // uncomment below and update the code to test the property finalRouteIndication
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property egressRateEffectiveDate (base name: "egress_rate_effective_date")', function() {
      // uncomment below and update the code to test the property egressRateEffectiveDate
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property origCountry (base name: "orig_country")', function() {
      // uncomment below and update the code to test the property origCountry
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property terminationIngressPacketJitter (base name: "termination_ingress_packet_jitter")', function() {
      // uncomment below and update the code to test the property terminationIngressPacketJitter
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property parId (base name: "par_id")', function() {
      // uncomment below and update the code to test the property parId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property ingressRateId (base name: "ingress_rate_id")', function() {
      // uncomment below and update the code to test the property ingressRateId
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property origCodeName (base name: "orig_code_name")', function() {
      // uncomment below and update the code to test the property origCodeName
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

    it('should have the property lrnDnis (base name: "lrn_dnis")', function() {
      // uncomment below and update the code to test the property lrnDnis
      //var instane = new DnlApi.ClientCdrGet();
      //expect(instance).to.be();
    });

  });

}));
