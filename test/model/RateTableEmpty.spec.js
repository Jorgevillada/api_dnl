/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DnlApi);
  }
}(this, function(expect, DnlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DnlApi.RateTableEmpty();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RateTableEmpty', function() {
    it('should create an instance of RateTableEmpty', function() {
      // uncomment below and update the code to test RateTableEmpty
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be.a(DnlApi.RateTableEmpty);
    });

    it('should have the property resources (base name: "resources")', function() {
      // uncomment below and update the code to test the property resources
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property prefixMaxLength (base name: "prefix_max_length")', function() {
      // uncomment below and update the code to test the property prefixMaxLength
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property jurType (base name: "jur_type")', function() {
      // uncomment below and update the code to test the property jurType
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property codeDeckId (base name: "code_deck_id")', function() {
      // uncomment below and update the code to test the property codeDeckId
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property rateType (base name: "rate_type")', function() {
      // uncomment below and update the code to test the property rateType
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property currencyId (base name: "currency_id")', function() {
      // uncomment below and update the code to test the property currencyId
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property noprefixMinLength (base name: "noprefix_min_length")', function() {
      // uncomment below and update the code to test the property noprefixMinLength
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property billingMethod (base name: "billing_method")', function() {
      // uncomment below and update the code to test the property billingMethod
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property lnpDippingRate (base name: "lnp_dipping_rate")', function() {
      // uncomment below and update the code to test the property lnpDippingRate
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property rateTypeName (base name: "rate_type_name")', function() {
      // uncomment below and update the code to test the property rateTypeName
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property noprefixMaxLength (base name: "noprefix_max_length")', function() {
      // uncomment below and update the code to test the property noprefixMaxLength
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property jurisdictionCountryId (base name: "jurisdiction_country_id")', function() {
      // uncomment below and update the code to test the property jurisdictionCountryId
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property isVirtual (base name: "is_virtual")', function() {
      // uncomment below and update the code to test the property isVirtual
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property prefixMinLength (base name: "prefix_min_length")', function() {
      // uncomment below and update the code to test the property prefixMinLength
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property jurisdictionPrefix (base name: "jurisdiction_prefix")', function() {
      // uncomment below and update the code to test the property jurisdictionPrefix
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property origination (base name: "origination")', function() {
      // uncomment below and update the code to test the property origination
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

    it('should have the property rates (base name: "rates")', function() {
      // uncomment below and update the code to test the property rates
      //var instane = new DnlApi.RateTableEmpty();
      //expect(instance).to.be();
    });

  });

}));
