/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DnlApi);
  }
}(this, function(expect, DnlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DnlApi.SystemParameterSystemSetting();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SystemParameterSystemSetting', function() {
    it('should create an instance of SystemParameterSystemSetting', function() {
      // uncomment below and update the code to test SystemParameterSystemSetting
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be.a(DnlApi.SystemParameterSystemSetting);
    });

    it('should have the property landingPage (base name: "landing_page")', function() {
      // uncomment below and update the code to test the property landingPage
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

    it('should have the property preLoadData (base name: "pre_load_data")', function() {
      // uncomment below and update the code to test the property preLoadData
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

    it('should have the property codeDeck (base name: "code_deck")', function() {
      // uncomment below and update the code to test the property codeDeck
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

    it('should have the property welcomeMessage (base name: "welcome_message")', function() {
      // uncomment below and update the code to test the property welcomeMessage
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

    it('should have the property requireComment (base name: "require_comment")', function() {
      // uncomment below and update the code to test the property requireComment
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

    it('should have the property sysCurrency (base name: "sys_currency")', function() {
      // uncomment below and update the code to test the property sysCurrency
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

    it('should have the property isShowMutualBalance (base name: "is_show_mutual_balance")', function() {
      // uncomment below and update the code to test the property isShowMutualBalance
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

    it('should have the property defaultUsIjRule (base name: "default_us_ij_rule")', function() {
      // uncomment below and update the code to test the property defaultUsIjRule
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

    it('should have the property inactivityTimeout (base name: "inactivity_timeout")', function() {
      // uncomment below and update the code to test the property inactivityTimeout
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

    it('should have the property reportCount (base name: "report_count")', function() {
      // uncomment below and update the code to test the property reportCount
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

    it('should have the property switchAlias (base name: "switch_alias")', function() {
      // uncomment below and update the code to test the property switchAlias
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

    it('should have the property sysTimezone (base name: "sys_timezone")', function() {
      // uncomment below and update the code to test the property sysTimezone
      //var instane = new DnlApi.SystemParameterSystemSetting();
      //expect(instance).to.be();
    });

  });

}));
