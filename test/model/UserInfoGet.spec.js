/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.62
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DnlApi);
  }
}(this, function(expect, DnlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DnlApi.UserInfoGet();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserInfoGet', function() {
    it('should create an instance of UserInfoGet', function() {
      // uncomment below and update the code to test UserInfoGet
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be.a(DnlApi.UserInfoGet);
    });

    it('should have the property cdrExpire (base name: "cdr_expire")', function() {
      // uncomment below and update the code to test the property cdrExpire
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property userType (base name: "user_type")', function() {
      // uncomment below and update the code to test the property userType
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property defaultMod2 (base name: "default_mod2")', function() {
      // uncomment below and update the code to test the property defaultMod2
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property lastLoginTime (base name: "last_login_time")', function() {
      // uncomment below and update the code to test the property lastLoginTime
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property clientLimits (base name: "client_limits")', function() {
      // uncomment below and update the code to test the property clientLimits
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property passwd (base name: "passwd")', function() {
      // uncomment below and update the code to test the property passwd
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property outboundReport (base name: "outbound_report")', function() {
      // uncomment below and update the code to test the property outboundReport
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property showCarrierTrunkDropOnly (base name: "show_carrier_trunk_drop_only")', function() {
      // uncomment below and update the code to test the property showCarrierTrunkDropOnly
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property isOnline (base name: "is_online")', function() {
      // uncomment below and update the code to test the property isOnline
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property createUserId (base name: "create_user_id")', function() {
      // uncomment below and update the code to test the property createUserId
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property authIp (base name: "auth_ip")', function() {
      // uncomment below and update the code to test the property authIp
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property resellerId (base name: "reseller_id")', function() {
      // uncomment below and update the code to test the property resellerId
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property agent (base name: "agent")', function() {
      // uncomment below and update the code to test the property agent
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "user_id")', function() {
      // uncomment below and update the code to test the property userId
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property reportFields (base name: "report_fields")', function() {
      // uncomment below and update the code to test the property reportFields
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property roleId (base name: "role_id")', function() {
      // uncomment below and update the code to test the property roleId
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property fullname (base name: "fullname")', function() {
      // uncomment below and update the code to test the property fullname
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property landingPage (base name: "landing_page")', function() {
      // uncomment below and update the code to test the property landingPage
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property client (base name: "client")', function() {
      // uncomment below and update the code to test the property client
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "create_time")', function() {
      // uncomment below and update the code to test the property createTime
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property loginIp (base name: "login_ip")', function() {
      // uncomment below and update the code to test the property loginIp
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property roleName (base name: "role_name")', function() {
      // uncomment below and update the code to test the property roleName
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property defaultMod (base name: "default_mod")', function() {
      // uncomment below and update the code to test the property defaultMod
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "client_id")', function() {
      // uncomment below and update the code to test the property clientId
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property avatarId (base name: "avatar_id")', function() {
      // uncomment below and update the code to test the property avatarId
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property reportGroup (base name: "report_group")', function() {
      // uncomment below and update the code to test the property reportGroup
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property cdrApiToken (base name: "cdr_api_token")', function() {
      // uncomment below and update the code to test the property cdrApiToken
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property lastSeen (base name: "last_seen")', function() {
      // uncomment below and update the code to test the property lastSeen
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property cardId (base name: "card_id")', function() {
      // uncomment below and update the code to test the property cardId
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

    it('should have the property allTermination (base name: "all_termination")', function() {
      // uncomment below and update the code to test the property allTermination
      //var instane = new DnlApi.UserInfoGet();
      //expect(instance).to.be();
    });

  });

}));
