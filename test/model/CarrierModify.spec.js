/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.62
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DnlApi);
  }
}(this, function(expect, DnlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DnlApi.CarrierModify();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CarrierModify', function() {
    it('should create an instance of CarrierModify', function() {
      // uncomment below and update the code to test CarrierModify
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be.a(DnlApi.CarrierModify);
    });

    it('should have the property dailyUsageGroupBy (base name: "daily_usage_group_by")', function() {
      // uncomment below and update the code to test the property dailyUsageGroupBy
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property dailyUsageOnNonZero (base name: "daily_usage_on_non_zero")', function() {
      // uncomment below and update the code to test the property dailyUsageOnNonZero
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property dailyUsageSummary (base name: "daily_usage_summary")', function() {
      // uncomment below and update the code to test the property dailyUsageSummary
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property profitType (base name: "profit_type")', function() {
      // uncomment below and update the code to test the property profitType
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property shortCallPercent (base name: "short_call_percent")', function() {
      // uncomment below and update the code to test the property shortCallPercent
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property billingEmail (base name: "billing_email")', function() {
      // uncomment below and update the code to test the property billingEmail
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property paymentTermId (base name: "payment_term_id")', function() {
      // uncomment below and update the code to test the property paymentTermId
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property dailyCdrDelivery (base name: "daily_cdr_delivery")', function() {
      // uncomment below and update the code to test the property dailyCdrDelivery
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property paymentReceivedNotice (base name: "payment_received_notice")', function() {
      // uncomment below and update the code to test the property paymentReceivedNotice
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property shortCallDuration (base name: "short_call_duration")', function() {
      // uncomment below and update the code to test the property shortCallDuration
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property isPrepay (base name: "is_prepay")', function() {
      // uncomment below and update the code to test the property isPrepay
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property cpsLimit (base name: "cps_limit")', function() {
      // uncomment below and update the code to test the property cpsLimit
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property lowBalanceAlert (base name: "low_balance_alert")', function() {
      // uncomment below and update the code to test the property lowBalanceAlert
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property nocEmail (base name: "noc_email")', function() {
      // uncomment below and update the code to test the property nocEmail
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property creditLimit (base name: "credit_limit")', function() {
      // uncomment below and update the code to test the property creditLimit
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property reportFrequency (base name: "report_frequency")', function() {
      // uncomment below and update the code to test the property reportFrequency
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property profitMargin (base name: "profit_margin")', function() {
      // uncomment below and update the code to test the property profitMargin
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property unlimitedCredit (base name: "unlimited_credit")', function() {
      // uncomment below and update the code to test the property unlimitedCredit
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property currencyName (base name: "currency_name")', function() {
      // uncomment below and update the code to test the property currencyName
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property enoughBalance (base name: "enough_balance")', function() {
      // uncomment below and update the code to test the property enoughBalance
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property dailyBalanceSummary (base name: "daily_balance_summary")', function() {
      // uncomment below and update the code to test the property dailyBalanceSummary
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property shortCallCharge (base name: "short_call_charge")', function() {
      // uncomment below and update the code to test the property shortCallCharge
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property login (base name: "login")', function() {
      // uncomment below and update the code to test the property login
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property autoInvoiceType (base name: "auto_invoice_type")', function() {
      // uncomment below and update the code to test the property autoInvoiceType
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "is_active")', function() {
      // uncomment below and update the code to test the property isActive
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property rateEmail (base name: "rate_email")', function() {
      // uncomment below and update the code to test the property rateEmail
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property groupId (base name: "group_id")', function() {
      // uncomment below and update the code to test the property groupId
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property financeEmailCc (base name: "finance_email_cc")', function() {
      // uncomment below and update the code to test the property financeEmailCc
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property accountDetail (base name: "account_detail")', function() {
      // uncomment below and update the code to test the property accountDetail
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property shortCallChargeExceedOnly (base name: "short_call_charge_exceed_only")', function() {
      // uncomment below and update the code to test the property shortCallChargeExceedOnly
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property callLimit (base name: "call_limit")', function() {
      // uncomment below and update the code to test the property callLimit
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property oneTimeReportTime (base name: "one_time_report_time")', function() {
      // uncomment below and update the code to test the property oneTimeReportTime
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property trunkUpdateAlert (base name: "trunk_update_alert")', function() {
      // uncomment below and update the code to test the property trunkUpdateAlert
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property mainEmail (base name: "main_email")', function() {
      // uncomment below and update the code to test the property mainEmail
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instane = new DnlApi.CarrierModify();
      //expect(instance).to.be();
    });

  });

}));
