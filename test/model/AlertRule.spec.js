/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DnlApi);
  }
}(this, function(expect, DnlApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DnlApi.AlertRule();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AlertRule', function() {
    it('should create an instance of AlertRule', function() {
      // uncomment below and update the code to test AlertRule
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be.a(DnlApi.AlertRule);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property monitorIngress (base name: "monitor_ingress")', function() {
      // uncomment below and update the code to test the property monitorIngress
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property acdOperator (base name: "acd_operator")', function() {
      // uncomment below and update the code to test the property acdOperator
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property profitabilityOperator (base name: "profitability_operator")', function() {
      // uncomment below and update the code to test the property profitabilityOperator
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property autoUnblock (base name: "auto_unblock")', function() {
      // uncomment below and update the code to test the property autoUnblock
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property acdValue (base name: "acd_value")', function() {
      // uncomment below and update the code to test the property acdValue
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property block (base name: "block")', function() {
      // uncomment below and update the code to test the property block
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property excludeCodes (base name: "exclude_codes")', function() {
      // uncomment below and update the code to test the property excludeCodes
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property subject (base name: "subject")', function() {
      // uncomment below and update the code to test the property subject
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property schedule (base name: "schedule")', function() {
      // uncomment below and update the code to test the property schedule
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property activate (base name: "activate")', function() {
      // uncomment below and update the code to test the property activate
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property asrValue (base name: "asr_value")', function() {
      // uncomment below and update the code to test the property asrValue
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property autoUnblockAfter (base name: "auto_unblock_after")', function() {
      // uncomment below and update the code to test the property autoUnblockAfter
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property runOn (base name: "run_on")', function() {
      // uncomment below and update the code to test the property runOn
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property pddValue (base name: "pdd_value")', function() {
      // uncomment below and update the code to test the property pddValue
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property runEvery (base name: "run_every")', function() {
      // uncomment below and update the code to test the property runEvery
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property revenueOperator (base name: "revenue_operator")', function() {
      // uncomment below and update the code to test the property revenueOperator
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property sendTo (base name: "send_to")', function() {
      // uncomment below and update the code to test the property sendTo
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property minAttempt (base name: "min_attempt")', function() {
      // uncomment below and update the code to test the property minAttempt
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property htmlContent (base name: "html_content")', function() {
      // uncomment below and update the code to test the property htmlContent
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property fromMailId (base name: "from_mail_id")', function() {
      // uncomment below and update the code to test the property fromMailId
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property profitabilityValue (base name: "profitability_value")', function() {
      // uncomment below and update the code to test the property profitabilityValue
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property allTrunks (base name: "all_trunks")', function() {
      // uncomment below and update the code to test the property allTrunks
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property sendEmail (base name: "send_email")', function() {
      // uncomment below and update the code to test the property sendEmail
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property samplePeriod (base name: "sample_period")', function() {
      // uncomment below and update the code to test the property samplePeriod
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property runDayOfWeek (base name: "run_day_of_week")', function() {
      // uncomment below and update the code to test the property runDayOfWeek
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property revenueValue (base name: "revenue_value")', function() {
      // uncomment below and update the code to test the property revenueValue
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property asrOperator (base name: "asr_operator")', function() {
      // uncomment below and update the code to test the property asrOperator
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property pddOperator (base name: "pdd_operator")', function() {
      // uncomment below and update the code to test the property pddOperator
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property trunks (base name: "trunks")', function() {
      // uncomment below and update the code to test the property trunks
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

    it('should have the property scope (base name: "scope")', function() {
      // uncomment below and update the code to test the property scope
      //var instane = new DnlApi.AlertRule();
      //expect(instance).to.be();
    });

  });

}));
