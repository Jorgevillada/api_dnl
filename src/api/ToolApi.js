/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AttributeNotExists', 'model/ClientCdrSimulateCall', 'model/InlineResponse200175', 'model/InlineResponse200176', 'model/InlineResponse200177', 'model/InlineResponse200178', 'model/InlineResponse200179', 'model/InlineResponse200180', 'model/ObjectCreated', 'model/ObjectNotFoundError', 'model/OperationError', 'model/RateGenerationTemplate', 'model/RateSend', 'model/RerateCdrTask', 'model/Success', 'model/UnauthenticatedError', 'model/ValidationError'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AttributeNotExists'), require('../model/ClientCdrSimulateCall'), require('../model/InlineResponse200175'), require('../model/InlineResponse200176'), require('../model/InlineResponse200177'), require('../model/InlineResponse200178'), require('../model/InlineResponse200179'), require('../model/InlineResponse200180'), require('../model/ObjectCreated'), require('../model/ObjectNotFoundError'), require('../model/OperationError'), require('../model/RateGenerationTemplate'), require('../model/RateSend'), require('../model/RerateCdrTask'), require('../model/Success'), require('../model/UnauthenticatedError'), require('../model/ValidationError'));
  } else {
    // Browser globals (root is window)
    if (!root.DnlApi) {
      root.DnlApi = {};
    }
    root.DnlApi.ToolApi = factory(root.DnlApi.ApiClient, root.DnlApi.AttributeNotExists, root.DnlApi.ClientCdrSimulateCall, root.DnlApi.InlineResponse200175, root.DnlApi.InlineResponse200176, root.DnlApi.InlineResponse200177, root.DnlApi.InlineResponse200178, root.DnlApi.InlineResponse200179, root.DnlApi.InlineResponse200180, root.DnlApi.ObjectCreated, root.DnlApi.ObjectNotFoundError, root.DnlApi.OperationError, root.DnlApi.RateGenerationTemplate, root.DnlApi.RateSend, root.DnlApi.RerateCdrTask, root.DnlApi.Success, root.DnlApi.UnauthenticatedError, root.DnlApi.ValidationError);
  }
}(this, function(ApiClient, AttributeNotExists, ClientCdrSimulateCall, InlineResponse200175, InlineResponse200176, InlineResponse200177, InlineResponse200178, InlineResponse200179, InlineResponse200180, ObjectCreated, ObjectNotFoundError, OperationError, RateGenerationTemplate, RateSend, RerateCdrTask, Success, UnauthenticatedError, ValidationError) {
  'use strict';

  /**
   * Tool service.
   * @module api/ToolApi
   * @version 1.2.10
   */

  /**
   * Constructs a new ToolApi. 
   * @alias module:api/ToolApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the toolRateGenerationIdDelete operation.
     * @callback module:api/ToolApi~toolRateGenerationIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Success} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes rategenerationtemplate
     * @param {Number} id RateGenerationTemplate id to get info about
     * @param {module:api/ToolApi~toolRateGenerationIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Success}
     */
    this.toolRateGenerationIdDelete = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling toolRateGenerationIdDelete");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Success;

      return this.apiClient.callApi(
        '/tool/rate_generation/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolRateGenerationIdGet operation.
     * @callback module:api/ToolApi~toolRateGenerationIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200175} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets rategenerationtemplate
     * @param {Number} id RateGenerationTemplate id to get info about
     * @param {module:api/ToolApi~toolRateGenerationIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200175}
     */
    this.toolRateGenerationIdGet = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling toolRateGenerationIdGet");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse200175;

      return this.apiClient.callApi(
        '/tool/rate_generation/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolRateGenerationIdPatch operation.
     * @callback module:api/ToolApi~toolRateGenerationIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200175} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Modifies rategenerationtemplate
     * @param {Number} id RateGenerationTemplate id to get info about
     * @param {Object} opts Optional parameters
     * @param {module:model/RateGenerationTemplate} opts.body RateGenerationTemplate to modify
     * @param {module:api/ToolApi~toolRateGenerationIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200175}
     */
    this.toolRateGenerationIdPatch = function(id, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling toolRateGenerationIdPatch");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse200175;

      return this.apiClient.callApi(
        '/tool/rate_generation/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolRateGenerationListGet operation.
     * @callback module:api/ToolApi~toolRateGenerationListGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200176} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets rategenerationtemplates
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page 
     * @param {Number} opts.perPage 
     * @param {module:model/String} opts.orderBy 
     * @param {module:model/String} opts.orderDir 
     * @param {String} opts.createBy 
     * @param {String} opts.name 
     * @param {String} opts.createOnGt 
     * @param {String} opts.createOnLt 
     * @param {String} opts.lastGeneratedGt 
     * @param {String} opts.lastGeneratedLt 
     * @param {module:api/ToolApi~toolRateGenerationListGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200176}
     */
    this.toolRateGenerationListGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'page': opts['page'],
        'per_page': opts['perPage'],
        'order_by': opts['orderBy'],
        'order_dir': opts['orderDir'],
        'create_by': opts['createBy'],
        'name': opts['name'],
        'create_on_gt': opts['createOnGt'],
        'create_on_lt': opts['createOnLt'],
        'last_generated_gt': opts['lastGeneratedGt'],
        'last_generated_lt': opts['lastGeneratedLt']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse200176;

      return this.apiClient.callApi(
        '/tool/rate_generation/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolRateGenerationPost operation.
     * @callback module:api/ToolApi~toolRateGenerationPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectCreated} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates new rategenerationtemplate
     * @param {Object} opts Optional parameters
     * @param {module:model/RateGenerationTemplate} opts.body RateGenerationTemplate to create
     * @param {module:api/ToolApi~toolRateGenerationPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectCreated}
     */
    this.toolRateGenerationPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ObjectCreated;

      return this.apiClient.callApi(
        '/tool/rate_generation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolRerateIdDelete operation.
     * @callback module:api/ToolApi~toolRerateIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Success} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes reratecdrtask
     * @param {Number} id RerateCdrTask id to get info about
     * @param {module:api/ToolApi~toolRerateIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Success}
     */
    this.toolRerateIdDelete = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling toolRerateIdDelete");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Success;

      return this.apiClient.callApi(
        '/tool/rerate/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolRerateIdGet operation.
     * @callback module:api/ToolApi~toolRerateIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200177} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets reratecdrtask
     * @param {Number} id RerateCdrTask id to get info about
     * @param {module:api/ToolApi~toolRerateIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200177}
     */
    this.toolRerateIdGet = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling toolRerateIdGet");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse200177;

      return this.apiClient.callApi(
        '/tool/rerate/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolRerateIdPatch operation.
     * @callback module:api/ToolApi~toolRerateIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200177} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Modifies reratecdrtask
     * @param {Number} id RerateCdrTask id to get info about
     * @param {Object} opts Optional parameters
     * @param {module:model/RerateCdrTask} opts.body RerateCdrTask to modify
     * @param {module:api/ToolApi~toolRerateIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200177}
     */
    this.toolRerateIdPatch = function(id, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling toolRerateIdPatch");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse200177;

      return this.apiClient.callApi(
        '/tool/rerate/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolRerateListGet operation.
     * @callback module:api/ToolApi~toolRerateListGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200178} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets reratecdrtasks
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page 
     * @param {Number} opts.perPage 
     * @param {module:model/String} opts.orderBy 
     * @param {module:model/String} opts.orderDir 
     * @param {module:api/ToolApi~toolRerateListGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200178}
     */
    this.toolRerateListGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'page': opts['page'],
        'per_page': opts['perPage'],
        'order_by': opts['orderBy'],
        'order_dir': opts['orderDir']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse200178;

      return this.apiClient.callApi(
        '/tool/rerate/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolReratePost operation.
     * @callback module:api/ToolApi~toolReratePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectCreated} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates new reratecdrtask
     * @param {Object} opts Optional parameters
     * @param {module:model/RerateCdrTask} opts.body RerateCdrTask to create
     * @param {module:api/ToolApi~toolReratePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectCreated}
     */
    this.toolReratePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ObjectCreated;

      return this.apiClient.callApi(
        '/tool/rerate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolSendRateDetailListGet operation.
     * @callback module:api/ToolApi~toolSendRateDetailListGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200180} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets ratesendlogdetail
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page 
     * @param {Number} opts.perPage 
     * @param {module:model/String} opts.orderBy 
     * @param {module:model/String} opts.orderDir 
     * @param {Number} opts.id 
     * @param {String} opts.sendTo 
     * @param {module:model/String} opts.status 
     * @param {Number} opts.trunkId 
     * @param {String} opts.downloadDateGt 
     * @param {String} opts.downloadDateLt 
     * @param {String} opts.downloadDeadlineGt 
     * @param {String} opts.downloadDeadlineLt 
     * @param {module:api/ToolApi~toolSendRateDetailListGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200180}
     */
    this.toolSendRateDetailListGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'page': opts['page'],
        'per_page': opts['perPage'],
        'order_by': opts['orderBy'],
        'order_dir': opts['orderDir'],
        'id': opts['id'],
        'send_to': opts['sendTo'],
        'status': opts['status'],
        'trunk_id': opts['trunkId'],
        'download_date_gt': opts['downloadDateGt'],
        'download_date_lt': opts['downloadDateLt'],
        'download_deadline_gt': opts['downloadDeadlineGt'],
        'download_deadline_lt': opts['downloadDeadlineLt']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse200180;

      return this.apiClient.callApi(
        '/tool/send_rate/detail_list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolSendRateListGet operation.
     * @callback module:api/ToolApi~toolSendRateListGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200179} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets ratesendlog
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page 
     * @param {Number} opts.perPage 
     * @param {module:model/String} opts.orderBy 
     * @param {module:model/String} opts.orderDir 
     * @param {module:api/ToolApi~toolSendRateListGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200179}
     */
    this.toolSendRateListGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'page': opts['page'],
        'per_page': opts['perPage'],
        'order_by': opts['orderBy'],
        'order_dir': opts['orderDir']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse200179;

      return this.apiClient.callApi(
        '/tool/send_rate/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolSendRatePost operation.
     * @callback module:api/ToolApi~toolSendRatePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectCreated} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates new ratesend
     * @param {Object} opts Optional parameters
     * @param {module:model/RateSend} opts.body RateSend to create
     * @param {module:api/ToolApi~toolSendRatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectCreated}
     */
    this.toolSendRatePost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ObjectCreated;

      return this.apiClient.callApi(
        '/tool/send_rate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the toolSimulateCallPost operation.
     * @callback module:api/ToolApi~toolSimulateCallPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Success} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * make simulate call
     * @param {Object} opts Optional parameters
     * @param {module:model/ClientCdrSimulateCall} opts.body Carriers to create
     * @param {module:api/ToolApi~toolSimulateCallPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Success}
     */
    this.toolSimulateCallPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth_token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Success;

      return this.apiClient.callApi(
        '/tool/simulate_call', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
