/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.62
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/RMEOpDate', 'model/RMEOpDecimal', 'model/RMEOpInt', 'model/RMEOpProfile'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./RMEOpDate'), require('./RMEOpDecimal'), require('./RMEOpInt'), require('./RMEOpProfile'));
  } else {
    // Browser globals (root is window)
    if (!root.DnlApi) {
      root.DnlApi = {};
    }
    root.DnlApi.RateMassEdit = factory(root.DnlApi.ApiClient, root.DnlApi.RMEOpDate, root.DnlApi.RMEOpDecimal, root.DnlApi.RMEOpInt, root.DnlApi.RMEOpProfile);
  }
}(this, function(ApiClient, RMEOpDate, RMEOpDecimal, RMEOpInt, RMEOpProfile) {
  'use strict';




  /**
   * The RateMassEdit model module.
   * @module model/RateMassEdit
   * @version 1.2.62
   */

  /**
   * Constructs a new <code>RateMassEdit</code>.
   * @alias module:model/RateMassEdit
   * @class
   * @param endDate {module:model/RMEOpDate} 
   * @param interval {module:model/RMEOpInt} 
   * @param effectiveDate {module:model/RMEOpDate} 
   * @param minTime {module:model/RMEOpInt} 
   * @param actionType {module:model/RateMassEdit.ActionTypeEnum} 
   * @param timeProfileId {module:model/RMEOpProfile} 
   * @param rate {module:model/RMEOpDecimal} 
   * @param setupFee {module:model/RMEOpDecimal} 
   */
  var exports = function(endDate, interval, effectiveDate, minTime, actionType, timeProfileId, rate, setupFee) {
    var _this = this;

    _this['end_date'] = endDate;
    _this['interval'] = interval;
    _this['effective_date'] = effectiveDate;
    _this['min_time'] = minTime;
    _this['action_type'] = actionType;
    _this['time_profile_id'] = timeProfileId;

    _this['rate'] = rate;
    _this['setup_fee'] = setupFee;
  };

  /**
   * Constructs a <code>RateMassEdit</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RateMassEdit} obj Optional instance to populate.
   * @return {module:model/RateMassEdit} The populated <code>RateMassEdit</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('end_date')) {
        obj['end_date'] = RMEOpDate.constructFromObject(data['end_date']);
      }
      if (data.hasOwnProperty('interval')) {
        obj['interval'] = RMEOpInt.constructFromObject(data['interval']);
      }
      if (data.hasOwnProperty('effective_date')) {
        obj['effective_date'] = RMEOpDate.constructFromObject(data['effective_date']);
      }
      if (data.hasOwnProperty('min_time')) {
        obj['min_time'] = RMEOpInt.constructFromObject(data['min_time']);
      }
      if (data.hasOwnProperty('action_type')) {
        obj['action_type'] = ApiClient.convertToType(data['action_type'], 'String');
      }
      if (data.hasOwnProperty('time_profile_id')) {
        obj['time_profile_id'] = RMEOpProfile.constructFromObject(data['time_profile_id']);
      }
      if (data.hasOwnProperty('rate_id_list')) {
        obj['rate_id_list'] = ApiClient.convertToType(data['rate_id_list'], ['Number']);
      }
      if (data.hasOwnProperty('rate')) {
        obj['rate'] = RMEOpDecimal.constructFromObject(data['rate']);
      }
      if (data.hasOwnProperty('setup_fee')) {
        obj['setup_fee'] = RMEOpDecimal.constructFromObject(data['setup_fee']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/RMEOpDate} end_date
   */
  exports.prototype['end_date'] = undefined;
  /**
   * @member {module:model/RMEOpInt} interval
   */
  exports.prototype['interval'] = undefined;
  /**
   * @member {module:model/RMEOpDate} effective_date
   */
  exports.prototype['effective_date'] = undefined;
  /**
   * @member {module:model/RMEOpInt} min_time
   */
  exports.prototype['min_time'] = undefined;
  /**
   * @member {module:model/RateMassEdit.ActionTypeEnum} action_type
   */
  exports.prototype['action_type'] = undefined;
  /**
   * @member {module:model/RMEOpProfile} time_profile_id
   */
  exports.prototype['time_profile_id'] = undefined;
  /**
   * @member {Array.<Number>} rate_id_list
   */
  exports.prototype['rate_id_list'] = undefined;
  /**
   * @member {module:model/RMEOpDecimal} rate
   */
  exports.prototype['rate'] = undefined;
  /**
   * @member {module:model/RMEOpDecimal} setup_fee
   */
  exports.prototype['setup_fee'] = undefined;


  /**
   * Allowed values for the <code>action_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ActionTypeEnum = {
    /**
     * value: "delete found rates"
     * @const
     */
    "delete found rates": "delete found rates",
    /**
     * value: "insert as new rates"
     * @const
     */
    "insert as new rates": "insert as new rates",
    /**
     * value: "update current rates"
     * @const
     */
    "update current rates": "update current rates",
    /**
     * value: "update all rates"
     * @const
     */
    "update all rates": "update all rates"  };


  return exports;
}));


