/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.62
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DnlApi) {
      root.DnlApi = {};
    }
    root.DnlApi.EgressTrunkPass = factory(root.DnlApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The EgressTrunkPass model module.
   * @module model/EgressTrunkPass
   * @version 1.2.62
   */

  /**
   * Constructs a new <code>EgressTrunkPass</code>.
   * @alias module:model/EgressTrunkPass
   * @class
   */
  var exports = function() {
    var _this = this;

















  };

  /**
   * Constructs a <code>EgressTrunkPass</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EgressTrunkPass} obj Optional instance to populate.
   * @return {module:model/EgressTrunkPass} The populated <code>EgressTrunkPass</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('display_name')) {
        obj['display_name'] = ApiClient.convertToType(data['display_name'], 'Boolean');
      }
      if (data.hasOwnProperty('jurisdiction_use_dnis')) {
        obj['jurisdiction_use_dnis'] = ApiClient.convertToType(data['jurisdiction_use_dnis'], 'String');
      }
      if (data.hasOwnProperty('rpid_party')) {
        obj['rpid_party'] = ApiClient.convertToType(data['rpid_party'], 'String');
      }
      if (data.hasOwnProperty('paid')) {
        obj['paid'] = ApiClient.convertToType(data['paid'], 'Boolean');
      }
      if (data.hasOwnProperty('cli_type')) {
        obj['cli_type'] = ApiClient.convertToType(data['cli_type'], 'String');
      }
      if (data.hasOwnProperty('rpid_id_type')) {
        obj['rpid_id_type'] = ApiClient.convertToType(data['rpid_id_type'], 'String');
      }
      if (data.hasOwnProperty('rpid_privacy')) {
        obj['rpid_privacy'] = ApiClient.convertToType(data['rpid_privacy'], 'String');
      }
      if (data.hasOwnProperty('pass_through')) {
        obj['pass_through'] = ApiClient.convertToType(data['pass_through'], 'String');
      }
      if (data.hasOwnProperty('rate_rounding')) {
        obj['rate_rounding'] = ApiClient.convertToType(data['rate_rounding'], 'String');
      }
      if (data.hasOwnProperty('rate_decimal')) {
        obj['rate_decimal'] = ApiClient.convertToType(data['rate_decimal'], 'Number');
      }
      if (data.hasOwnProperty('priv')) {
        obj['priv'] = ApiClient.convertToType(data['priv'], 'Boolean');
      }
      if (data.hasOwnProperty('rpid')) {
        obj['rpid'] = ApiClient.convertToType(data['rpid'], 'String');
      }
      if (data.hasOwnProperty('div')) {
        obj['div'] = ApiClient.convertToType(data['div'], 'Boolean');
      }
      if (data.hasOwnProperty('pci')) {
        obj['pci'] = ApiClient.convertToType(data['pci'], 'Boolean');
      }
      if (data.hasOwnProperty('oli')) {
        obj['oli'] = ApiClient.convertToType(data['oli'], 'Boolean');
      }
      if (data.hasOwnProperty('rpid_screen')) {
        obj['rpid_screen'] = ApiClient.convertToType(data['rpid_screen'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Boolean} display_name
   */
  exports.prototype['display_name'] = undefined;
  /**
   * @member {module:model/EgressTrunkPass.JurisdictionUseDnisEnum} jurisdiction_use_dnis
   * @default 'LRN'
   */
  exports.prototype['jurisdiction_use_dnis'] = 'LRN';
  /**
   * @member {module:model/EgressTrunkPass.RpidPartyEnum} rpid_party
   * @default 'None'
   */
  exports.prototype['rpid_party'] = 'None';
  /**
   * @member {Boolean} paid
   */
  exports.prototype['paid'] = undefined;
  /**
   * @member {module:model/EgressTrunkPass.CliTypeEnum} cli_type
   * @default 'white'
   */
  exports.prototype['cli_type'] = 'white';
  /**
   * @member {module:model/EgressTrunkPass.RpidIdTypeEnum} rpid_id_type
   * @default 'None'
   */
  exports.prototype['rpid_id_type'] = 'None';
  /**
   * @member {module:model/EgressTrunkPass.RpidPrivacyEnum} rpid_privacy
   * @default 'None'
   */
  exports.prototype['rpid_privacy'] = 'None';
  /**
   * @member {module:model/EgressTrunkPass.PassThroughEnum} pass_through
   * @default 'transparent'
   */
  exports.prototype['pass_through'] = 'transparent';
  /**
   * @member {module:model/EgressTrunkPass.RateRoundingEnum} rate_rounding
   * @default 'Up'
   */
  exports.prototype['rate_rounding'] = 'Up';
  /**
   * @member {Number} rate_decimal
   * @default 6
   */
  exports.prototype['rate_decimal'] = 6;
  /**
   * @member {Boolean} priv
   */
  exports.prototype['priv'] = undefined;
  /**
   * @member {module:model/EgressTrunkPass.RpidEnum} rpid
   * @default 'Never'
   */
  exports.prototype['rpid'] = 'Never';
  /**
   * @member {Boolean} div
   */
  exports.prototype['div'] = undefined;
  /**
   * @member {Boolean} pci
   */
  exports.prototype['pci'] = undefined;
  /**
   * @member {Boolean} oli
   */
  exports.prototype['oli'] = undefined;
  /**
   * @member {module:model/EgressTrunkPass.RpidScreenEnum} rpid_screen
   * @default 'None'
   */
  exports.prototype['rpid_screen'] = 'None';


  /**
   * Allowed values for the <code>jurisdiction_use_dnis</code> property.
   * @enum {String}
   * @readonly
   */
  exports.JurisdictionUseDnisEnum = {
    /**
     * value: "LRN"
     * @const
     */
    "LRN": "LRN",
    /**
     * value: "DNIS"
     * @const
     */
    "DNIS": "DNIS"  };

  /**
   * Allowed values for the <code>rpid_party</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RpidPartyEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "Calling"
     * @const
     */
    "Calling": "Calling",
    /**
     * value: "Called"
     * @const
     */
    "Called": "Called",
    /**
     * value: "Proxy"
     * @const
     */
    "Proxy": "Proxy"  };

  /**
   * Allowed values for the <code>cli_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CliTypeEnum = {
    /**
     * value: "white"
     * @const
     */
    "white": "white",
    /**
     * value: "white non cli"
     * @const
     */
    "white non cli": "white non cli",
    /**
     * value: "gray"
     * @const
     */
    "gray": "gray"  };

  /**
   * Allowed values for the <code>rpid_id_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RpidIdTypeEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "Subscriber"
     * @const
     */
    "Subscriber": "Subscriber",
    /**
     * value: "User"
     * @const
     */
    "User": "User",
    /**
     * value: "Term"
     * @const
     */
    "Term": "Term",
    /**
     * value: "Proxy"
     * @const
     */
    "Proxy": "Proxy"  };

  /**
   * Allowed values for the <code>rpid_privacy</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RpidPrivacyEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "Full"
     * @const
     */
    "Full": "Full",
    /**
     * value: "Name"
     * @const
     */
    "Name": "Name",
    /**
     * value: "Url"
     * @const
     */
    "Url": "Url",
    /**
     * value: "OFF"
     * @const
     */
    "OFF": "OFF",
    /**
     * value: "Ipaddr"
     * @const
     */
    "Ipaddr": "Ipaddr",
    /**
     * value: "Proxy"
     * @const
     */
    "Proxy": "Proxy"  };

  /**
   * Allowed values for the <code>pass_through</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PassThroughEnum = {
    /**
     * value: "transparent"
     * @const
     */
    "transparent": "transparent",
    /**
     * value: "not pass through the ban"
     * @const
     */
    "not pass through the ban": "not pass through the ban"  };

  /**
   * Allowed values for the <code>rate_rounding</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RateRoundingEnum = {
    /**
     * value: "Up"
     * @const
     */
    "Up": "Up",
    /**
     * value: "Down"
     * @const
     */
    "Down": "Down"  };

  /**
   * Allowed values for the <code>rpid</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RpidEnum = {
    /**
     * value: "Never"
     * @const
     */
    "Never": "Never",
    /**
     * value: "Pass Through"
     * @const
     */
    "Pass Through": "Pass Through",
    /**
     * value: "Always"
     * @const
     */
    "Always": "Always"  };

  /**
   * Allowed values for the <code>rpid_screen</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RpidScreenEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "No"
     * @const
     */
    "No": "No",
    /**
     * value: "Yes"
     * @const
     */
    "Yes": "Yes",
    /**
     * value: "Proxy"
     * @const
     */
    "Proxy": "Proxy"  };


  return exports;
}));


