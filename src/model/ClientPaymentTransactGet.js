/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.62
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DnlApi) {
      root.DnlApi = {};
    }
    root.DnlApi.ClientPaymentTransactGet = factory(root.DnlApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ClientPaymentTransactGet model module.
   * @module model/ClientPaymentTransactGet
   * @version 1.2.62
   */

  /**
   * Constructs a new <code>ClientPaymentTransactGet</code>.
   * @alias module:model/ClientPaymentTransactGet
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>ClientPaymentTransactGet</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ClientPaymentTransactGet} obj Optional instance to populate.
   * @return {module:model/ClientPaymentTransactGet} The populated <code>ClientPaymentTransactGet</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('date')) {
        obj['date'] = ApiClient.convertToType(data['date'], 'Date');
      }
      if (data.hasOwnProperty('transaction_type')) {
        obj['transaction_type'] = ApiClient.convertToType(data['transaction_type'], 'String');
      }
      if (data.hasOwnProperty('note')) {
        obj['note'] = ApiClient.convertToType(data['note'], 'String');
      }
      if (data.hasOwnProperty('current_balance')) {
        obj['current_balance'] = ApiClient.convertToType(data['current_balance'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Number} amount
   * @default 0.0
   */
  exports.prototype['amount'] = 0.0;
  /**
   * @member {Date} date
   */
  exports.prototype['date'] = undefined;
  /**
   * @member {module:model/ClientPaymentTransactGet.TransactionTypeEnum} transaction_type
   * @default 'n/a'
   */
  exports.prototype['transaction_type'] = 'n/a';
  /**
   * @member {String} note
   */
  exports.prototype['note'] = undefined;
  /**
   * @member {Number} current_balance
   */
  exports.prototype['current_balance'] = undefined;


  /**
   * Allowed values for the <code>transaction_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TransactionTypeEnum = {
    /**
     * value: "n/a"
     * @const
     */
    "n/a": "n/a",
    /**
     * value: "undefined"
     * @const
     */
    "undefined": "undefined",
    /**
     * value: "invoice payment sent"
     * @const
     */
    "invoice payment sent": "invoice payment sent",
    /**
     * value: "invoice payment received"
     * @const
     */
    "invoice payment received": "invoice payment received",
    /**
     * value: "prepay payment received"
     * @const
     */
    "prepay payment received": "prepay payment received",
    /**
     * value: "payment sent"
     * @const
     */
    "payment sent": "payment sent",
    /**
     * value: "credit note received"
     * @const
     */
    "credit note received": "credit note received",
    /**
     * value: "credit note sent"
     * @const
     */
    "credit note sent": "credit note sent",
    /**
     * value: "reset"
     * @const
     */
    "reset": "reset",
    /**
     * value: "offset"
     * @const
     */
    "offset": "offset",
    /**
     * value: "debit received"
     * @const
     */
    "debit received": "debit received",
    /**
     * value: "debit sent"
     * @const
     */
    "debit sent": "debit sent",
    /**
     * value: "mutual reset"
     * @const
     */
    "mutual reset": "mutual reset",
    /**
     * value: "actual reset"
     * @const
     */
    "actual reset": "actual reset",
    /**
     * value: "prepayment"
     * @const
     */
    "prepayment": "prepayment"  };


  return exports;
}));


