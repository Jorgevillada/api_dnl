/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.62
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DnlApi) {
      root.DnlApi = {};
    }
    root.DnlApi.AuthorizationLogGet = factory(root.DnlApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AuthorizationLogGet model module.
   * @module model/AuthorizationLogGet
   * @version 1.2.62
   */

  /**
   * Constructs a new <code>AuthorizationLogGet</code>.
   * @alias module:model/AuthorizationLogGet
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>AuthorizationLogGet</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AuthorizationLogGet} obj Optional instance to populate.
   * @return {module:model/AuthorizationLogGet} The populated <code>AuthorizationLogGet</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('failed_reason')) {
        obj['failed_reason'] = ApiClient.convertToType(data['failed_reason'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('login_ip')) {
        obj['login_ip'] = ApiClient.convertToType(data['login_ip'], 'String');
      }
      if (data.hasOwnProperty('username')) {
        obj['username'] = ApiClient.convertToType(data['username'], 'String');
      }
      if (data.hasOwnProperty('entered_password')) {
        obj['entered_password'] = ApiClient.convertToType(data['entered_password'], 'String');
      }
      if (data.hasOwnProperty('login_time')) {
        obj['login_time'] = ApiClient.convertToType(data['login_time'], 'Date');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/AuthorizationLogGet.FailedReasonEnum} failed_reason
   * @default 'success'
   */
  exports.prototype['failed_reason'] = 'success';
  /**
   * @member {module:model/AuthorizationLogGet.StatusEnum} status
   * @default 'pass'
   */
  exports.prototype['status'] = 'pass';
  /**
   * @member {String} login_ip
   */
  exports.prototype['login_ip'] = undefined;
  /**
   * @member {String} username
   */
  exports.prototype['username'] = undefined;
  /**
   * @member {String} entered_password
   */
  exports.prototype['entered_password'] = undefined;
  /**
   * @member {Date} login_time
   */
  exports.prototype['login_time'] = undefined;


  /**
   * Allowed values for the <code>failed_reason</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FailedReasonEnum = {
    /**
     * value: "success"
     * @const
     */
    "success": "success",
    /**
     * value: "fail"
     * @const
     */
    "fail": "fail",
    /**
     * value: "forbidden"
     * @const
     */
    "forbidden": "forbidden"  };

  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",
    /**
     * value: "key"
     * @const
     */
    "key": "key"  };


  return exports;
}));


