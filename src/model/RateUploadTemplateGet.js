/**
 * DNL API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.62
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DnlApi) {
      root.DnlApi = {};
    }
    root.DnlApi.RateUploadTemplateGet = factory(root.DnlApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The RateUploadTemplateGet model module.
   * @module model/RateUploadTemplateGet
   * @version 1.2.62
   */

  /**
   * Constructs a new <code>RateUploadTemplateGet</code>.
   * @alias module:model/RateUploadTemplateGet
   * @class
   */
  var exports = function() {
    var _this = this;


























  };

  /**
   * Constructs a <code>RateUploadTemplateGet</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RateUploadTemplateGet} obj Optional instance to populate.
   * @return {module:model/RateUploadTemplateGet} The populated <code>RateUploadTemplateGet</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('append_prefix')) {
        obj['append_prefix'] = ApiClient.convertToType(data['append_prefix'], 'Boolean');
      }
      if (data.hasOwnProperty('new_code_days')) {
        obj['new_code_days'] = ApiClient.convertToType(data['new_code_days'], 'Number');
      }
      if (data.hasOwnProperty('end_date_all')) {
        obj['end_date_all'] = ApiClient.convertToType(data['end_date_all'], 'Date');
      }
      if (data.hasOwnProperty('check_effective')) {
        obj['check_effective'] = ApiClient.convertToType(data['check_effective'], 'Boolean');
      }
      if (data.hasOwnProperty('rate_increase_days')) {
        obj['rate_increase_days'] = ApiClient.convertToType(data['rate_increase_days'], 'Number');
      }
      if (data.hasOwnProperty('create_on')) {
        obj['create_on'] = ApiClient.convertToType(data['create_on'], 'Date');
      }
      if (data.hasOwnProperty('headers')) {
        obj['headers'] = ApiClient.convertToType(data['headers'], ['String']);
      }
      if (data.hasOwnProperty('send_error_email_to')) {
        obj['send_error_email_to'] = ApiClient.convertToType(data['send_error_email_to'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('dup_method')) {
        obj['dup_method'] = ApiClient.convertToType(data['dup_method'], 'String');
      }
      if (data.hasOwnProperty('effective_date_format')) {
        obj['effective_date_format'] = ApiClient.convertToType(data['effective_date_format'], 'String');
      }
      if (data.hasOwnProperty('min_time_default')) {
        obj['min_time_default'] = ApiClient.convertToType(data['min_time_default'], 'Number');
      }
      if (data.hasOwnProperty('has_code_deck')) {
        obj['has_code_deck'] = ApiClient.convertToType(data['has_code_deck'], 'Boolean');
      }
      if (data.hasOwnProperty('end_date_all_gmt')) {
        obj['end_date_all_gmt'] = ApiClient.convertToType(data['end_date_all_gmt'], 'String');
      }
      if (data.hasOwnProperty('end_date_gmt')) {
        obj['end_date_gmt'] = ApiClient.convertToType(data['end_date_gmt'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('end_date')) {
        obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
      }
      if (data.hasOwnProperty('update_on')) {
        obj['update_on'] = ApiClient.convertToType(data['update_on'], 'Date');
      }
      if (data.hasOwnProperty('interval_default')) {
        obj['interval_default'] = ApiClient.convertToType(data['interval_default'], 'Number');
      }
      if (data.hasOwnProperty('create_by')) {
        obj['create_by'] = ApiClient.convertToType(data['create_by'], 'String');
      }
      if (data.hasOwnProperty('code_name_match')) {
        obj['code_name_match'] = ApiClient.convertToType(data['code_name_match'], 'String');
      }
      if (data.hasOwnProperty('with_header')) {
        obj['with_header'] = ApiClient.convertToType(data['with_header'], 'Boolean');
      }
      if (data.hasOwnProperty('append_prefix_value')) {
        obj['append_prefix_value'] = ApiClient.convertToType(data['append_prefix_value'], 'String');
      }
      if (data.hasOwnProperty('effective_date_default')) {
        obj['effective_date_default'] = ApiClient.convertToType(data['effective_date_default'], 'Date');
      }
      if (data.hasOwnProperty('reject_rate')) {
        obj['reject_rate'] = ApiClient.convertToType(data['reject_rate'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Boolean} append_prefix
   */
  exports.prototype['append_prefix'] = undefined;
  /**
   * @member {Number} new_code_days
   */
  exports.prototype['new_code_days'] = undefined;
  /**
   * @member {Date} end_date_all
   */
  exports.prototype['end_date_all'] = undefined;
  /**
   * @member {Boolean} check_effective
   * @default false
   */
  exports.prototype['check_effective'] = false;
  /**
   * @member {Number} rate_increase_days
   */
  exports.prototype['rate_increase_days'] = undefined;
  /**
   * @member {Date} create_on
   */
  exports.prototype['create_on'] = undefined;
  /**
   * @member {Array.<module:model/RateUploadTemplateGet.HeadersEnum>} headers
   */
  exports.prototype['headers'] = undefined;
  /**
   * @member {module:model/RateUploadTemplateGet.SendErrorEmailToEnum} send_error_email_to
   * @default 'none'
   */
  exports.prototype['send_error_email_to'] = 'none';
  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {module:model/RateUploadTemplateGet.DupMethodEnum} dup_method
   * @default 'End-Date All Records'
   */
  exports.prototype['dup_method'] = 'End-Date All Records';
  /**
   * @member {module:model/RateUploadTemplateGet.EffectiveDateFormatEnum} effective_date_format
   */
  exports.prototype['effective_date_format'] = undefined;
  /**
   * @member {Number} min_time_default
   */
  exports.prototype['min_time_default'] = undefined;
  /**
   * @member {Boolean} has_code_deck
   */
  exports.prototype['has_code_deck'] = undefined;
  /**
   * @member {String} end_date_all_gmt
   * @default '(+ 0)'
   */
  exports.prototype['end_date_all_gmt'] = '(+ 0)';
  /**
   * @member {String} end_date_gmt
   * @default '(+ 0)'
   */
  exports.prototype['end_date_gmt'] = '(+ 0)';
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Date} end_date
   */
  exports.prototype['end_date'] = undefined;
  /**
   * @member {Date} update_on
   */
  exports.prototype['update_on'] = undefined;
  /**
   * @member {Number} interval_default
   */
  exports.prototype['interval_default'] = undefined;
  /**
   * @member {String} create_by
   */
  exports.prototype['create_by'] = undefined;
  /**
   * @member {module:model/RateUploadTemplateGet.CodeNameMatchEnum} code_name_match
   * @default 'Re-populate Country and Code Name with Selected Code Deck'
   */
  exports.prototype['code_name_match'] = 'Re-populate Country and Code Name with Selected Code Deck';
  /**
   * @member {Boolean} with_header
   */
  exports.prototype['with_header'] = undefined;
  /**
   * @member {String} append_prefix_value
   */
  exports.prototype['append_prefix_value'] = undefined;
  /**
   * @member {Date} effective_date_default
   */
  exports.prototype['effective_date_default'] = undefined;
  /**
   * @member {module:model/RateUploadTemplateGet.RejectRateEnum} reject_rate
   * @default 'no'
   */
  exports.prototype['reject_rate'] = 'no';


  /**
   * Allowed values for the <code>headers</code> property.
   * @enum {String}
   * @readonly
   */
  exports.HeadersEnum = {
    /**
     * value: "rate_id"
     * @const
     */
    "rate_id": "rate_id",
    /**
     * value: "rate_table_id"
     * @const
     */
    "rate_table_id": "rate_table_id",
    /**
     * value: "code"
     * @const
     */
    "code": "code",
    /**
     * value: "rate"
     * @const
     */
    "rate": "rate",
    /**
     * value: "setup_fee"
     * @const
     */
    "setup_fee": "setup_fee",
    /**
     * value: "effective_date"
     * @const
     */
    "effective_date": "effective_date",
    /**
     * value: "end_date"
     * @const
     */
    "end_date": "end_date",
    /**
     * value: "min_time"
     * @const
     */
    "min_time": "min_time",
    /**
     * value: "grace_time"
     * @const
     */
    "grace_time": "grace_time",
    /**
     * value: "interval"
     * @const
     */
    "interval": "interval",
    /**
     * value: "time_profile_id"
     * @const
     */
    "time_profile_id": "time_profile_id",
    /**
     * value: "seconds"
     * @const
     */
    "seconds": "seconds",
    /**
     * value: "code_name"
     * @const
     */
    "code_name": "code_name",
    /**
     * value: "basic_percentages"
     * @const
     */
    "basic_percentages": "basic_percentages",
    /**
     * value: "gift_percentages"
     * @const
     */
    "gift_percentages": "gift_percentages",
    /**
     * value: "rate_type"
     * @const
     */
    "rate_type": "rate_type",
    /**
     * value: "intra_rate"
     * @const
     */
    "intra_rate": "intra_rate",
    /**
     * value: "inter_rate"
     * @const
     */
    "inter_rate": "inter_rate",
    /**
     * value: "local_rate"
     * @const
     */
    "local_rate": "local_rate",
    /**
     * value: "country"
     * @const
     */
    "country": "country",
    /**
     * value: "zone"
     * @const
     */
    "zone": "zone",
    /**
     * value: "ocn"
     * @const
     */
    "ocn": "ocn",
    /**
     * value: "lata"
     * @const
     */
    "lata": "lata",
    /**
     * value: "create_time"
     * @const
     */
    "create_time": "create_time",
    /**
     * value: "did_type"
     * @const
     */
    "did_type": "did_type"  };

  /**
   * Allowed values for the <code>send_error_email_to</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SendErrorEmailToEnum = {
    /**
     * value: "none"
     * @const
     */
    "none": "none",
    /**
     * value: "Carrier Rate Contact"
     * @const
     */
    "Carrier Rate Contact": "Carrier Rate Contact",
    /**
     * value: "Switch Rate Contact"
     * @const
     */
    "Switch Rate Contact": "Switch Rate Contact"  };

  /**
   * Allowed values for the <code>dup_method</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DupMethodEnum = {
    /**
     * value: "End-Date All Records"
     * @const
     */
    "End-Date All Records": "End-Date All Records",
    /**
     * value: "Delete Existing Records"
     * @const
     */
    "Delete Existing Records": "Delete Existing Records",
    /**
     * value: "End-Date Existing Records"
     * @const
     */
    "End-Date Existing Records": "End-Date Existing Records"  };

  /**
   * Allowed values for the <code>effective_date_format</code> property.
   * @enum {String}
   * @readonly
   */
  exports.EffectiveDateFormatEnum = {
    /**
     * value: "mm/dd/yyyy"
     * @const
     */
    "mm/dd/yyyy": "mm/dd/yyyy",
    /**
     * value: "yyyy-mm-dd"
     * @const
     */
    "yyyy-mm-dd": "yyyy-mm-dd",
    /**
     * value: "dd-mm-yyyy"
     * @const
     */
    "dd-mm-yyyy": "dd-mm-yyyy",
    /**
     * value: "dd/mm/yyyy"
     * @const
     */
    "dd/mm/yyyy": "dd/mm/yyyy",
    /**
     * value: "yyyy/mm/dd"
     * @const
     */
    "yyyy/mm/dd": "yyyy/mm/dd"  };

  /**
   * Allowed values for the <code>code_name_match</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CodeNameMatchEnum = {
    /**
     * value: "Re-populate Country and Code Name with Selected Code Deck"
     * @const
     */
    "Deck": "Re-populate Country and Code Name with Selected Code Deck",
    /**
     * value: "Re-populate Country and Code Name with Selected Code Deck if not available"
     * @const
     */
    "Deck if not available": "Re-populate Country and Code Name with Selected Code Deck if not available"  };

  /**
   * Allowed values for the <code>reject_rate</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RejectRateEnum = {
    /**
     * value: "no"
     * @const
     */
    "no": "no",
    /**
     * value: "yes"
     * @const
     */
    "yes": "yes"  };


  return exports;
}));


